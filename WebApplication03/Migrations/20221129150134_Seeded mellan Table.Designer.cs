// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication03.Data;

#nullable disable

namespace WebApplication03.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221129150134_Seeded mellan Table")]
    partial class SeededmellanTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityCountry", b =>
                {
                    b.Property<string>("CitiesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountriesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CitiesId", "CountriesId");

                    b.HasIndex("CountriesId");

                    b.ToTable("CityCountry");
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.Property<string>("LanguagesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PeopleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LanguagesId", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("LanguagePerson");

                    b.HasData(
                        new
                        {
                            LanguagesId = "5b577863-95fb-4cd8-b2e7-d0184fdc8fa2",
                            PeopleId = "ba2656cd-c18f-45df-9932-7711b34da98b"
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = "55c63a23-fb3e-4895-8e24-844458860413",
                            Name = "GBG",
                            PostNumber = "415 52",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(973)
                        },
                        new
                        {
                            Id = "78bd3ee4-26f3-4a74-9656-3747e0ea3294",
                            Name = "Järpen",
                            PostNumber = "415 55",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(978)
                        },
                        new
                        {
                            Id = "c25a047b-112f-457f-b1c3-1ca3a9f25633",
                            Name = "Mörsil",
                            PostNumber = "415 44",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(982)
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = "7f945feb-2238-4eac-bffd-8f07e833bf5f",
                            Name = "Sweden",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(1004)
                        },
                        new
                        {
                            Id = "9f89e6b5-22f9-4ab1-b1ff-75c43c873a81",
                            Name = "Norway",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(1009)
                        },
                        new
                        {
                            Id = "cc108784-47ff-47f8-81ae-e00033c3a4b5",
                            Name = "Danmarc",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(1012)
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = "5b577863-95fb-4cd8-b2e7-d0184fdc8fa2",
                            Name = "Svenska",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(167)
                        },
                        new
                        {
                            Id = "269777c7-9298-4d9a-be0c-eb61a8752b1a",
                            Name = "Svenska",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(904)
                        },
                        new
                        {
                            Id = "c019a187-82ac-4aba-a744-301588257250",
                            Name = "Persiska",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(926)
                        },
                        new
                        {
                            Id = "ad712968-7145-4c87-be43-e30e75d97e41",
                            Name = "Engleska",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(930)
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = "ba2656cd-c18f-45df-9932-7711b34da98b",
                            Age = 32,
                            Name = "Ali",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(227)
                        },
                        new
                        {
                            Id = "075138be-b34f-4199-972b-7e8a3b31fddd",
                            Age = 32,
                            Name = "Ali",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(946)
                        },
                        new
                        {
                            Id = "d55437b6-b13f-45ab-8596-dba93d6756d8",
                            Age = 32,
                            Name = "Ali 1",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(951)
                        },
                        new
                        {
                            Id = "49a35039-7fab-4dca-a8a1-dde310fcf906",
                            Age = 32,
                            Name = "Ali 2",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 16, 1, 34, 339, DateTimeKind.Local).AddTicks(955)
                        });
                });

            modelBuilder.Entity("CityCountry", b =>
                {
                    b.HasOne("WebApplication03.Models.City", null)
                        .WithMany()
                        .HasForeignKey("CitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication03.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.HasOne("WebApplication03.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication03.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
