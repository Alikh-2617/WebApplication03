// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication03.Data;

#nullable disable

namespace WebApplication03.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221129145955_Update")]
    partial class Update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityCountry", b =>
                {
                    b.Property<string>("CitiesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountriesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CitiesId", "CountriesId");

                    b.HasIndex("CountriesId");

                    b.ToTable("CityCountry");
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.Property<string>("LanguagesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PeopleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LanguagesId", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("LanguagePerson");
                });

            modelBuilder.Entity("WebApplication03.Models.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = "31cdde65-b584-47f9-9ff6-2936c4f00f84",
                            Name = "GBG",
                            PostNumber = "415 52",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9109)
                        },
                        new
                        {
                            Id = "e854a2bd-9f53-4a43-baf6-6a185d2f0461",
                            Name = "Järpen",
                            PostNumber = "415 55",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9114)
                        },
                        new
                        {
                            Id = "6c44cc8f-f927-4678-84e5-7ffec3a67cb4",
                            Name = "Mörsil",
                            PostNumber = "415 44",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9118)
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = "a3bafd45-e62f-4ba1-8990-86569bc34410",
                            Name = "Sweden",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9137)
                        },
                        new
                        {
                            Id = "c929ced4-9aae-4fe6-b9ca-418a2260fca6",
                            Name = "Norway",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9142)
                        },
                        new
                        {
                            Id = "e71f4146-e8ca-4d50-b953-d07ce1535e05",
                            Name = "Danmarc",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9146)
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = "bf6fd29b-78f5-4ade-82de-7a75abd2ca45",
                            Name = "Svenska",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(8889)
                        },
                        new
                        {
                            Id = "c24b7ddb-f532-4037-8c0c-4a125c97f759",
                            Name = "Persiska",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(8923)
                        },
                        new
                        {
                            Id = "8f48049f-965f-4721-ad1c-3bb589227750",
                            Name = "Engleska",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(8927)
                        });
                });

            modelBuilder.Entity("WebApplication03.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = "6d99b3e9-8aaa-4f4e-9138-c3cc894d5446",
                            Age = 32,
                            Name = "Ali",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9068)
                        },
                        new
                        {
                            Id = "547aa015-6131-403f-87bd-a8a2e7222afa",
                            Age = 32,
                            Name = "Ali 1",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9086)
                        },
                        new
                        {
                            Id = "81e3f262-0c65-4f18-9e17-ec937cb13a84",
                            Age = 32,
                            Name = "Ali 2",
                            PhoneNumber = "123456",
                            Register = new DateTime(2022, 11, 29, 15, 59, 55, 455, DateTimeKind.Local).AddTicks(9089)
                        });
                });

            modelBuilder.Entity("CityCountry", b =>
                {
                    b.HasOne("WebApplication03.Models.City", null)
                        .WithMany()
                        .HasForeignKey("CitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication03.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LanguagePerson", b =>
                {
                    b.HasOne("WebApplication03.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication03.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
